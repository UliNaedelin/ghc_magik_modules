#% text_encoding = utf8
# ****** CASE ARCHIVE GENERATED BY THE CASE_ARCHIVE_ENGINE *******

o << case_object.new_from_archive(
                                  {23651,
                                  "git_dcc_meta_daten",
                                  write_string("GIT DCC Meta-Daten"),
                                  "git_dcc_meta_daten",
                                  _unset,{0,0,0},0} ,149905.874640, 13619.4407236, 20042.0000000, 3090.00000000 )
$

an_f << o.add_field("name", "Name", :physical)
an_f.set_key_status_to(_true)
an_f.archive_set_field_type_to(:|ds_char16_vec|,150)
an_f.print_width << 50
an_f.mandatory? << True


an_f << o.add_field("import?", "Import?", :physical)
an_f.archive_set_field_type_to(:|ds_bool|,_unset)
an_f.print_width << 10


an_f << o.add_field("externes_koord_system", "Externes Koord-System", :physical)
an_f.archive_set_field_type_to(:|ds_char16_vec|,100)
an_f.print_width << 100
an_f.mandatory? << False
an_f.archive_unset_value << ""


an_f << o.add_field("format_typ", "Format Typ", :physical)
an_f.archive_set_field_type_to(:|ds_char16_vec|,50)
an_f.print_width << 50


an_f << o.add_field("korrigiere_umlaute?", "Korrigiere Umlaute?", :physical)
an_f.archive_set_field_type_to(:|ds_kleene|,_unset)
an_f.print_width << 10
an_f.mandatory? << False
an_f.archive_unset_value << maybe


an_f << o.add_field("ds_view", "ds_view", :physical)
an_f.archive_set_field_type_to(:|ds_char16_vec|,50)
an_f.print_width << 50


an_f << o.add_field("import_mode", "Import Mode", :physical)
an_f.archive_set_field_type_to(:|ds_char16_vec|,200)
an_f.print_width << 200


an_f << o.add_field("transfer_id", "Transfer ID", :physical)
an_f.archive_set_field_type_to(:|ds_uint|,_unset)
an_f.print_width << 10


an_f << o.add_field("datenauswertung?", "Datenauswertung?", :physical)
an_f.archive_set_field_type_to(:|ds_kleene|,_unset)
an_f.print_width << 10
an_f.mandatory? << False
an_f.archive_unset_value << maybe


$

an_f << o.add_field("exporttyp", "Export Typ", :physical)
an_f.archive_set_field_type_to(:|ds_char16_vec|,40)
an_f.print_width << 40
an_f.mandatory? << False
an_f.archive_unset_value << ""


an_f << o.add_field("scrapbook_name", "Ablage Name", :physical)
an_f.archive_set_field_type_to(:|ds_char16_vec|,100)
an_f.print_width << 100
an_f.mandatory? << False
an_f.archive_unset_value << ""


an_f << o.add_field("polygon_reduction?", "Polygon Reduktion?", :physical)
an_f.archive_set_field_type_to(:|ds_kleene|,_unset)
an_f.print_width << 10
an_f.mandatory? << False
an_f.archive_unset_value << maybe


an_f << o.add_field("file_name", "Dateiname", :physical)
an_f.archive_set_field_type_to(:|ds_char16_vec|,100)
an_f.print_width << 30
an_f.mandatory? << False
an_f.archive_unset_value << ""


an_f << o.add_field("git_dcc_meta_dateis", "Git Dcc Meta Dateis", :join)


an_f << o.add_field("ghc_dcc_auto_config", "Ghc Dcc Auto Config", :join)


$

o << case_object.new_from_archive(
                                  {23747,
                                  "git_dcc_meta_datei",
                                  write_string("GIT DCC Meta-Datei"),
                                  "git_dcc_meta_datei",
                                  _unset,{0,0,0},0} ,151372.874640, -2765.55927640, 19392.0000000, 3090.00000000 )
$

an_f << o.add_field("dateiname", "Dateiname", :physical)
an_f.set_key_status_to(_true)
an_f.archive_set_field_type_to(:|ds_char16_vec|,255)
an_f.print_width << 255
an_f.mandatory? << True


an_f << o.add_field("git_dcc_meta_daten", "Git Dcc Meta Daten", :join)


$

o << case_object.new_from_archive(
                                  {23729,
                                  "git_mapping",
                                  write_string("GIT Mapping"),
                                  "git_mapping",
                                  _unset,{0,0,0},0} ,105113.874640, 493.440723596, 12104.0000000, 3090.00000000 )
$

an_f << o.add_field("id", "Id", :physical)
an_f.set_key_status_to(_true)
an_f.archive_set_field_type_to(:|sys_id|,_unset)
an_f.print_width << 10
an_f.mandatory? << True
an_f.set_generator_method_name("make_sysid()")


an_f << o.add_field("database_classname", "Datenbank Objektklasse", :physical)
an_f.archive_set_field_type_to(:|ds_charci_vec|,255)
an_f.print_width << 255
an_f.mandatory? << False
an_f.archive_unset_value << ""


an_f << o.add_field("method_after_insertion", "Methode nach einfuegen", :physical)
an_f.archive_set_field_type_to(:|ds_char16_vec|,250)
an_f.print_width << 50
an_f.mandatory? << False
an_f.archive_unset_value << ""


an_f << o.add_field("method_before_insertion", "Methode vor einfuegen", :physical)
an_f.archive_set_field_type_to(:|ds_char16_vec|,250)
an_f.print_width << 50
an_f.mandatory? << False
an_f.archive_unset_value << ""


an_f << o.add_field("view_name", "View Name", :physical)
an_f.archive_set_field_type_to(:|ds_char16_vec|,64)
an_f.print_width << 20
an_f.mandatory? << False
an_f.archive_unset_value << ""


an_f << o.add_field("parent_classname", "Eltern Mappingklasse", :logical)
an_f.archive_set_field_type_to(:|ds_charci_vec|,50)
an_f.print_width << 50
an_f.archive_unset_value << ""


an_f << o.add_field("level", "Zuordnungs-Ebene", :logical)
an_f.archive_set_field_type_to(:|ds_int|,_unset)
an_f.print_width << 10
an_f.archive_unset_value << 0


an_f << o.add_field("git_transfers", "Git Transfer", :join)


an_f << o.add_field("git_field_mappings", "Git Field Mappings", :join)
an_f.cascade? << True
an_f.structure_type << :sub


$

an_f << o.add_field("childs_to_read", "Child Mappings", :join)
an_f.cascade? << True


an_f << o.add_field("parent_of_childs", "Parent", :join)


$

r << case_relationship.new_from_archive(
                                        {23806,
                                        "0:n",
                                        "unset",
                                        _unset, {0,0,0}, 0})
r.make_archive_o_rec("git_dcc_meta_daten", "git_dcc_meta_datei")
r.add_default_join_names()
r.archive_update_int_info_rec({_unset, 
"int!git_dcc_meta__git_dcc_meta_", 
"git_dcc_meta__to_int!git_dcc_me", 
"int!git_dcc_me_to_git_dcc_meta_", 
"git_dcc_meta__to_int!git_dcc_me1", 
"int!git_dcc_me_to_git_dcc_meta"})
sec_rope << sector_rope.new(1)
sec_rope[1] << sector.new_with_xy((160960207264183*2.0**-30),(-655282771873*2.0**-29),(160960207264183*2.0**-30),(6482416003167*2.0**-29))
r.make_archived_geometry(sec_rope)
$

r << case_relationship.new_from_archive(
                                        {23757,
                                        "0:n",
                                        "unset",
                                        _unset, {0,0,0}, 0})
r.make_archive_o_rec("git_mapping", "git_mapping")
r.add_default_join_names()
r.archive_update_int_info_rec({_unset, 
"int!git_mapping_git_mapping", 
"git_mapping_to_int!git_mappin", 
"int!git_mappin_to_git_mapping", 
"git_mapping_to_int!git_mappin1", 
"int!git_mappin_to_git_mappin"})
sec_rope << sector_rope.new(1)
sec_rope[1] << sector.new_with_xy((111125701728695*2.0**-30),(-564551587745*2.0**-29),(110861561239991*2.0**-30),(-2037725370273*2.0**-29),(107306402060727*2.0**-30),(-1993165084577*2.0**-29),(106366877964727*2.0**-30),(-564551587745*2.0**-29))
r.make_archived_geometry(sec_rope)
$

o << case_object.new_from_archive(
                                  {23674,
                                  "git_transfer",
                                  write_string("GIT Transfer"),
                                  "git_transfer",
                                  _unset,{0,0,0},0} ,104334.874640, 22607.4407236, 11582.0000000, 3090.00000000 )
$

an_f << o.add_field("id", "Id", :physical)
an_f.set_key_status_to(_true)
an_f.archive_set_field_type_to(:|sys_id|,_unset)
an_f.print_width << 10
an_f.mandatory? << True
an_f.set_generator_method_name("make_sysid()")


an_f << o.add_field("name", "Name", :physical)
an_f.archive_set_field_type_to(:|ds_char16_vec|,128)
an_f.print_width << 128
an_f.mandatory? << True
an_f.archive_unset_value << ""


an_f << o.add_field("text_id", "text_id", :physical)
an_f.archive_set_field_type_to(:|ds_uint|,_unset)
an_f.print_width << 10
an_f.mandatory? << True
an_f.archive_default_value << 0
an_f.set_generator_method_name("dd!zero()")


an_f << o.add_field("external_csys", "Externes Koordinatensystem", :physical)
an_f.archive_set_field_type_to(:|ds_charci_vec|,100)
an_f.print_width << 100
an_f.mandatory? << False
an_f.archive_unset_value << ""


an_f << o.add_field("magnification", "Skalierung", :physical)
an_f.archive_set_field_type_to(:|ds_float|,_unset)
an_f.print_width << 10
an_f.mandatory? << False
an_f.archive_unset_value << (1.0)


an_f << o.add_field("translation_x", "Translation X", :physical)
an_f.archive_set_field_type_to(:|ds_float|,_unset)
an_f.print_width << 10
an_f.mandatory? << False
an_f.archive_unset_value << (0.0)


an_f << o.add_field("translation_y", "Translation Y", :physical)
an_f.archive_set_field_type_to(:|ds_float|,_unset)
an_f.print_width << 10
an_f.mandatory? << False
an_f.archive_unset_value << (0.0)


an_f << o.add_field("rotation_x", "Rotation X", :physical)
an_f.archive_set_field_type_to(:|ds_float|,_unset)
an_f.print_width << 10
an_f.mandatory? << False
an_f.archive_unset_value << (0.0)


an_f << o.add_field("rotation_y", "Rotation Y", :physical)
an_f.archive_set_field_type_to(:|ds_float|,_unset)
an_f.print_width << 10
an_f.mandatory? << False
an_f.archive_unset_value << (0.0)


$

an_f << o.add_field("rotation_angle", "Rotation (Grad)", :physical)
an_f.archive_set_field_type_to(:|ds_float|,_unset)
an_f.print_width << 10
an_f.mandatory? << False
an_f.archive_unset_value << (0.0)


an_f << o.add_field("translation?", "Benutzerdefinierte Translation?", :physical)
an_f.archive_set_field_type_to(:|ds_bool|,_unset)
an_f.print_width << 10
an_f.mandatory? << False
an_f.archive_unset_value << false


an_f << o.add_field("transform_order", "Reihenfolge der Transformationen", :physical)
an_f.archive_set_field_type_to(:|ds_charci_vec|,3)
an_f.print_width << 3
an_f.mandatory? << False
an_f.archive_unset_value << "rst"


an_f << o.add_field("transform_on", "external/internal?", :physical)
an_f.archive_set_field_type_to(:|ds_charci_vec|,8)
an_f.print_width << 8
an_f.mandatory? << False
an_f.archive_unset_value << "external"


an_f << o.add_field("bemerkung", "Bemerkung", :text)
an_f.archive_text_join_field(:text_id)


an_f << o.add_field("git_mappings", "Git Mappings", :join)


$

o << case_object.new_from_archive(
                                  {23697,
                                  "git_conversion_value",
                                  write_string("GIT Transformationstabelle"),
                                  "git_conversion_value",
                                  _unset,{0,0,0},0} ,106861.874640, -23214.5592764, 25248.0000000, 3090.00000000 )
$

an_f << o.add_field("value_ext", "Externer Wert", :physical)
an_f.set_key_status_to(_true)
an_f.archive_set_field_type_to(:|ds_char16_vec|,200)
an_f.print_width << 200
an_f.mandatory? << True


an_f << o.add_field("git_field_mapping_id", "Git Field Mapping Id", :physical)
an_f.set_key_status_to(_true)
an_f.mandatory? << True


an_f << o.add_field("value_int", "Interner Wert", :physical)
an_f.archive_set_field_type_to(:|ds_char16_vec|,200)
an_f.print_width << 200


an_f << o.add_field("git_field_mapping", "Git Field Mapping", :join)
an_f.structure_type << :super


$

o << case_object.new_from_archive(
                                  {23709,
                                  "git_field_mapping",
                                  write_string("GIT Feldzuordnung"),
                                  "git_field_mapping",
                                  _unset,{0,0,0},0} ,105879.874640, -14631.5592764, 17830.0000000, 3090.00000000 )
$

an_f << o.add_field("id", "Id", :physical)
an_f.set_key_status_to(_true)
an_f.archive_set_field_type_to(:|sys_id|,_unset)
an_f.print_width << 10
an_f.mandatory? << True
an_f.set_generator_method_name("make_sysid()")


an_f << o.add_field("fieldname_conversion?", "Feldnamenkonvertierung?", :physical)
an_f.archive_set_field_type_to(:|ds_bool|,_unset)
an_f.print_width << 10
an_f.mandatory? << False
an_f.archive_unset_value << true


an_f << o.add_field("database_classname", "Datenbank Objektklasse", :physical)
an_f.archive_set_field_type_to(:|ds_charci_vec|,255)
an_f.print_width << 255
an_f.mandatory? << False
an_f.archive_unset_value << ""


an_f << o.add_field("internal_fieldname", "Interner (GIS) Feldname", :physical)
an_f.archive_set_field_type_to(:|ds_charci_vec|,255)
an_f.print_width << 255
an_f.mandatory? << True


an_f << o.add_field("external_fieldname", "Externer Feldname", :physical)
an_f.archive_set_field_type_to(:|ds_charci_vec|,255)
an_f.print_width << 255
an_f.mandatory? << True


an_f << o.add_field("conversion_method", "Konvertierungsmethode", :physical)
an_f.archive_set_field_type_to(:|ds_charci_vec|,255)
an_f.print_width << 255
an_f.mandatory? << False
an_f.archive_unset_value << ""


an_f << o.add_field("reconversion_method", "Re-Konvertierungsmethode", :physical)
an_f.archive_set_field_type_to(:|ds_charci_vec|,255)
an_f.print_width << 255
an_f.mandatory? << False
an_f.archive_unset_value << ""


an_f << o.add_field("git_mapping_id", "Git Mapping Id", :physical)


an_f << o.add_field("default_value", "Standardwert wenn unset", :physical)
an_f.archive_set_field_type_to(:|ds_charci_vec|,255)
an_f.print_width << 255
an_f.mandatory? << False
an_f.archive_unset_value << ""


$

an_f << o.add_field("level", "Zuordnungs-Ebene", :logical)
an_f.archive_set_field_type_to(:|ds_int|,_unset)
an_f.print_width << 10
an_f.archive_unset_value << 0


an_f << o.add_field("git_mapping", "Git Mapping", :join)
an_f.structure_type << :super


an_f << o.add_field("git_conversion_values", "Git Conversion Values", :join)
an_f.cascade? << True
an_f.structure_type << :sub


$

o << case_object.new_from_archive(
                                  {23636,
                                  "ghc_dcc_auto_config",
                                  write_string("GHC DCC Automatisierung"),
                                  "ghc_dcc_auto_config",
                                  _unset,{0,0,0},0} ,186424.874640, 8474.44072360, 25638.0000000, 3090.00000000 )
$

an_f << o.add_field("id", "ID", :physical)
an_f.set_key_status_to(_true)
an_f.archive_set_field_type_to(:|sys_id|,_unset)
an_f.print_width << 10
an_f.mandatory? << True
an_f.set_generator_method_name("make_sysid()")


an_f << o.add_field("name", "Name", :physical)
an_f.archive_set_field_type_to(:|ds_char16_vec|,70)
an_f.print_width << 30


an_f << o.add_field("text_id", "text_id", :physical)
an_f.archive_set_field_type_to(:|text_id|,_unset)
an_f.print_width << 10
an_f.mandatory? << True
an_f.archive_default_value << 0
an_f.set_generator_method_name("dd!zero()")


an_f << o.add_field("note_id", "note_id", :physical)
an_f.archive_set_field_type_to(:|text_id|,_unset)
an_f.print_width << 10
an_f.mandatory? << True
an_f.archive_default_value << 0
an_f.set_generator_method_name("dd!zero()")


an_f << o.add_field("path", "Verzeichnisname", :text)
an_f.archive_text_join_field(:text_id)


an_f << o.add_field("note", "Bemerkung", :text)
an_f.archive_text_join_field(:note_id)


an_f << o.add_field("git_dcc_meta_datens", "DCC Meta Daten", :join)


$

r << case_relationship.new_from_archive(
                                        {23795,
                                        "m:n",
                                        "unset",
                                        _unset, {0,0,0}, 0})
r.make_archive_o_rec("git_transfer", "git_mapping")
r.add_default_join_names()
r.archive_update_int_info_rec({_unset, 
"int!git_transfer_git_mapping", 
"git_transfer_to_int!git_transf", 
"int!git_transf_to_git_transfer", 
"git_mapping_to_int!git_transf", 
"int!git_transf_to_git_mapping"})
sec_rope << sector_rope.new(1)
sec_rope[1] << sector.new_with_xy((112867310967223*2.0**-30),(1094379530335*2.0**-29),(112867310967223*2.0**-30),(11307811760223*2.0**-29))
r.make_archived_geometry(sec_rope)
$

r << case_relationship.new_from_archive(
                                        {23777,
                                        "0:n",
                                        "unset",
                                        _unset, {0,0,0}, 0})
r.make_archive_o_rec("ghc_dcc_auto_config", "git_dcc_meta_daten")
r.add_default_join_names()
r.archive_update_int_info_rec({_unset, 
"int!ghc_dcc_auto__git_dcc_meta_", 
"ghc_dcc_auto__to_int!ghc_dcc_au", 
"int!ghc_dcc_au_to_ghc_dcc_auto_", 
"git_dcc_meta__to_int!ghc_dcc_au", 
"int!ghc_dcc_au_to_git_dcc_meta_"})
sec_rope << sector_rope.new(1)
sec_rope[1] << sector.new_with_xy((165760906959287*2.0**-30),(8141883992159*2.0**-29),(177102841846199*2.0**-30),(9491040594015*2.0**-29),(191631642466743*2.0**-30),(5379683149919*2.0**-29))
r.make_archived_geometry(sec_rope)
$

r << case_relationship.new_from_archive(
                                        {23766,
                                        "1:n",
                                        "unset",
                                        _unset, {0,0,0}, 0})
r.make_archive_o_rec("git_field_mapping", "git_conversion_value")
r.add_default_join_names()
r.join_name << "git_field_map_to_git_conversio"
r.reverse_join_name << "git_conversio_to_git_field_map"
sec_rope << sector_rope.new(1)
sec_rope[1] << sector.new_with_xy((114742064191927*2.0**-30),(-11633756051361*2.0**-29),(114742064191927*2.0**-30),(-8684724131745*2.0**-29))
r.make_archived_geometry(sec_rope)
$

r << case_relationship.new_from_archive(
                                        {23784,
                                        "1:n",
                                        "unset",
                                        _unset, {0,0,0}, 0})
r.make_archive_o_rec("git_mapping", "git_field_mapping")
r.add_default_join_names()
r.join_name << "git_mapping_to_git_field_map"
r.reverse_join_name << "git_field_map_to_git_mapping"
sec_rope << sector_rope.new(1)
sec_rope[1] << sector.new_with_xy((113687649720759*2.0**-30),(-7025793013665*2.0**-29),(113337609886135*2.0**-30),(-564551587745*2.0**-29))
r.make_archived_geometry(sec_rope)
$

o << !current_dsview!.get_case_object( :|git_field_mapping| )
o.set_visible_fields( { :|id|, :|fieldname_conversion?|, :|internal_fieldname|, :|database_classname|, :|external_fieldname|, :|git_mapping|, :|level|, :|default_value|, :|git_conversion_values|, :|conversion_method|, :|reconversion_method| }, :default )
$

case_object.archived_indices(:git_field_mapping, {"git_mapping_id"}, {23784})
case_object.archive_aspect_field(:git_field_mapping, :git_mapping, :git_mapping, :database_classname)
$

case_object.archive_add_field_inheritance(:git_field_mapping, :git_mapping_id, :git_mapping, :id, 23784)
case_object.archive_join_field_info(:git_field_mapping, :git_mapping, 23784, :child)
case_object.archive_join_field_info(:git_field_mapping, :git_conversion_values, 23766, :parent)
$

o << !current_dsview!.get_case_object( :|git_transfer| )
o.set_visible_fields( { :|id|, :|name|, :|bemerkung|, :|git_mappings|, :|external_csys|, :|magnification|, :|translation_x|, :|translation_y|, :|rotation_x|, :|rotation_y|, :|rotation_angle|, :|translation?|, :|transform_order|, :|transform_on| }, :default )
$

$

case_object.archive_join_field_info(:git_transfer, :git_mappings, 23795, :parent)
$

o << !current_dsview!.get_case_object( :|ghc_dcc_auto_config| )
o.set_visible_fields( { :|name|, :|path|, :|id| }, :browser )
o.set_visible_fields( { :|name|, :|path|, :|id| }, :default )
o.set_visible_fields( { :|id|, :|name|, :|text_id|, :|path|, :|note|, :|git_dcc_meta_datens| }, :main_page )
o.set_visible_fields( { :|id|, :|name|, :|path| }, :report )
$

$

case_object.archive_join_field_info(:ghc_dcc_auto_config, :git_dcc_meta_datens, 23777, :parent)
$

o << !current_dsview!.get_case_object( :|git_dcc_meta_datei| )
o.set_visible_fields( { :|dateiname|, :|git_dcc_meta_daten| }, :default )
$

case_object.archive_aspect_field(:git_dcc_meta_datei, :git_dcc_meta_daten, :git_dcc_meta_daten, :name)
$

case_object.archive_join_field_info(:git_dcc_meta_datei, :git_dcc_meta_daten, 23806, :child)
$

o << !current_dsview!.get_case_object( :|git_dcc_meta_daten| )
o.set_visible_fields( { :|name|, :|import?|, :|externes_koord_system|, :|format_typ|, :|korrigiere_umlaute?|, :|ds_view|, :|git_dcc_meta_dateis|, :|import_mode|, :|transfer_id|, :|datenauswertung?|, :|exporttyp|, :|scrapbook_name|, :|polygon_reduction?|, :|file_name|, :|ghc_dcc_auto_config| }, :default )
$

case_object.archive_aspect_field(:git_dcc_meta_daten, :ghc_dcc_auto_config, :ghc_dcc_auto_config, :id)
$

case_object.archive_join_field_info(:git_dcc_meta_daten, :git_dcc_meta_dateis, 23806, :parent)
case_object.archive_join_field_info(:git_dcc_meta_daten, :ghc_dcc_auto_config, 23777, :child)
$

o << !current_dsview!.get_case_object( :|git_conversion_value| )
o.set_visible_fields( { :|value_ext|, :|value_int|, :|git_field_mapping| }, :default )
$

case_object.archived_indices(:git_conversion_value, {"git_field_mapping_id"}, {23766})
case_object.archive_aspect_field(:git_conversion_value, :git_field_mapping, :git_field_mapping, :internal_fieldname)
$

case_object.archive_add_field_inheritance(:git_conversion_value, :git_field_mapping_id, :git_field_mapping, :id, 23766)
case_object.archive_join_field_info(:git_conversion_value, :git_field_mapping, 23766, :child)
$

o << !current_dsview!.get_case_object( :|git_mapping| )
o.set_visible_fields( { :|id|, :|level|, :|database_classname|, :|git_transfers|, :|git_field_mappings|, :|childs_to_read|, :|parent_of_childs|, :|parent_classname|, :|method_after_insertion|, :|method_before_insertion|, :|view_name| }, :default )
$

case_object.archived_indices(:git_mapping, {"view_name"}, {})
case_object.archived_indices(:git_mapping, {"view_name","database_classname"}, {})
case_object.archive_aspect_field(:git_mapping, :parent_of_childs, :git_mapping, :id)
$

case_object.archive_join_field_info(:git_mapping, :git_transfers, 23795, :child)
case_object.archive_join_field_info(:git_mapping, :git_field_mappings, 23784, :parent)
case_object.archive_join_field_info(:git_mapping, :childs_to_read, 23757, :parent)
case_object.archive_join_field_info(:git_mapping, :parent_of_childs, 23757, :child)
$

