#% text_encoding = iso8859_1
##
##  Auto-generated by Dialog Designer ( 19.03.2010 )
##
##  System.user_mame = uli.naedelin

_package sw

_pragma(classify_level=restricted)
def_slotted_exemplar(:ghc_sgs_dialog,
	{
		{:items, _unset, :writable}
	},
	:plugin)
$
ghc_sgs_dialog.def_property(
	:selected_class_vec,
	:type,
	:object,
	:default_value,
	rope.new()
	       )
$

ghc_sgs_dialog.def_property(
	:apply_content_filter?,
	:type,
	:boolean,
	:default_value,
	_true
	       )
$

ghc_sgs_dialog.def_property(
	:save_interpolation?,
	:type,
	:boolean,
	:default_value,
	_true
	       )
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.init_actions()
	##
	##  Auto-generated by Dialog Designer : 19.03.2010
	##
	##  Initialize actions for SELF.
	#
	# Work Area Actions ...
	#
	_self.add_action( sw_action.new( :toggle_item_01,
		:toolbar_control,        :toggle_item,
		:caption,                _self.message(:toggle_item_01),
		:value,                  _true,
		:engine,                 _self,
		:value_change_message,   :|toggle_item_01_changed()| ) )

	_self.add_action( sw_action.new( :toggle_item_02,
		:toolbar_control,        :toggle_item,
		:caption,                _self.message(:toggle_item_02),
		:value,                  _true,
		:engine,                 _self,
		:value_change_message,   :|toggle_item_02_changed()| ) )

	_self.add_action( sw_action.new( :button_cancel,
		:toolbar_control,        :button_item,
		:caption,                _self.message(:button_cancel),
		:engine,                 _self,
		:action_message,         :|cancel()| ) )

	_self.add_action( sw_action.new( :button_calculate,
		:toolbar_control,        :button_item,
		:caption,                _self.message(:button_calculate),
		:engine,                 _self,
		:action_message,         :|calculate()| ) )
	#
	# Menubar Actions ...
	#
	_self.add_action( sw_action.new( :quit,
		:menubar_control,        :button_item,
		:engine,                 _self,
		:action_message,         :|quit()| ) )

	_self.add_action( sw_action.new( :about,
		:menubar_control,        :button_item,
		:engine,                 _self,
		:action_message,         :|about()| ) )
_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.build_gui(a_frame,_optional xml_element)
	##
	##  Auto-generated by Dialog Designer : 19.03.2010
	##
	##  Define the GUI layout.

	.items << property_list.new()

	rowcol_01 << rowcol.new(a_frame,6,1,:pixel,
		:resize?,	_true,
		:tab_label,	"Situationsbezogene Grundwasserbeeinflussung",
		:bottom_spacing,	6,
		:col_spacing,	7,
		:default_col_alignment,	:fill,
		:default_row_alignment,	:fill,
		:left_spacing,	6,
		:right_spacing,	6,
		:row_spacing,	6,
		:top_spacing,	6)

	rowcol_03 << rowcol.new(rowcol_01,1,2,:pixel,
		:resize?,	_true,
		:tab_label,	"Situationsbezogene Grundwasserbeeinflussung",
		:bottom_spacing,	0,
		:col,	1,
		:col_spacing,	7,
		:col_alignment,	:fill,
		:row_alignment,	:fill,
		:left_spacing,	0,
		:right_spacing,	0,
		:row,	1,
		:row_spacing,	6,
		:top_spacing,	0)

	.items[:label_item_01] << label_item.new(rowcol_03,"Zeitpunkt der GW-Interpolation:",
			:col,	1,
			:col_alignment,	:fill,
			:row,	1,
			:row_alignment,	:top,
			:value,	"Zeitpunkt der GW-Interpolation:" )

	.items[:date_time_item_02] << tree_item.new(rowcol_03,
		:model,	_self,
		:aspect,	:|date_time_item_02_aspect|,
		:col,	2,
		:col_alignment,	:fill,
		:column_headings,	{},
		:cell_selection?,_true,
		:min_height,	25,
		:row,	1,
		:row_alignment,  :top,
		:editors, {{:when, in_place_date_editor}},
		:mode,	:one,
		:min_width,	80,
		:value_changed_notifier, :|date_time_item_02_changed()|)

	.items[:label_item_02] << label_item.new(rowcol_01,"Zuweisen des GW-Abstands auf folgende Klassen:",
			:col,	1,
			:col_alignment,	:fill,
			:row,	2,
			:row_alignment,	:top,
			:value,	"Zuweisen des GW-Abstands auf folgende Klassen:" )

	.items[:simple_list_item_01] << simple_list_item.new(rowcol_01,
		:model,	_self,
		:change_selector,	:|simple_list_item_01_changed()|,
		:col,	1,
		:col_alignment,	:fill,
		:mode,	:many,
		:representation_message, :external_name,
		:row,	3,
		:row_alignment,	:fill,
		:visible_item_count,	5,
		:items,	_self.simple_list_item_01_aspect )

	_self.action(:toggle_item_01).place_control_on(rowcol_01,:dialog,
		:control_type, { :toggle_item,
			:change_selector,	:|toggle_item_01_changed()|,
			:col,	1,
			:col_alignment,	:left,
			:label,	"Interpolation in SW-Datenbank speichern?",
			:row,	4,
			:row_alignment,	:top,
			:value,	_true } )

	_self.action(:toggle_item_02).place_control_on(rowcol_01,:dialog,
		:control_type, { :toggle_item,
			:change_selector,	:|apply_content_filter_changed()|,
			:col,	1,
			:col_alignment,	:left,
			:label,	"Berücksichtige Inhaltsfilter-Gültigkeit bei Zuweisung",
			:row,	5,
			:row_alignment,	:top,
			:value,	_true } )

	rowcol_02 << rowcol.new(rowcol_01,1,3,:pixel,
		:resize?,	_true,
		:tab_label,	"Situationsbezogene Grundwasserbeeinflussung",
		:bottom_spacing,	0,
		:col,	1,
		:col_resize_values,	{100,0,0},
		:col_spacing,	20,
		:col_alignment,	:fill,
		:row_alignment,	:fill,
		:left_spacing,	0,
		:right_spacing,	0,
		:row,	6,
		:row_spacing,	6,
		:top_spacing,	0)

	.items[:label_item_03] << label_item.new(rowcol_02," ",
			:col,	1,
			:col_alignment,	:fill,
			:row,	1,
			:row_alignment,	:top,
			:value,	" " )

	_self.action(:button_cancel).place_control_on(rowcol_02,:dialog,
		:control_type, { :button_item,
			:col,	2,
			:col_alignment,	:right,
			:label,	"Abbruch",
			:min_width,	120,
			:row,	1,
			:row_alignment,	:top,
			:selector,	:|cancel()| } )

	_self.action(:button_calculate).place_control_on(rowcol_02,:dialog,
		:control_type, { :button_item,
			:col,	3,
			:col_alignment,	:right,
			:label,	"Interpoliere GW-Stand",
			:min_width,	120,
			:row,	1,
			:row_alignment,	:top,
			:selector,	:|calculate()| } )

	>> rowcol_01
_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.quit()
	##
	##  Auto-generated by Dialog Designer : 19.03.2010
	##
	##  Close the dialog.
	##
	.framework.close()
_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.about(_gather args)
	##
	##  Auto-generated by Dialog Designer : 19.03.2010

	_self.dd_default_method("ghc_sgs_dialog.about()",_scatter args)
_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.get_interpolation_date()
	##
	l_value << .items[:date_time_item_02].tree_manager.data.an_element().value[:when]

	_return l_value
_endmethod
$
_pragma(classify_level=restricted)
_method ghc_sgs_dialog.calculate(_gather args)
	##
	_dynamic !notify_database_data_changes?!
	!notify_database_data_changes?! << _false

	l_int_date << _self.get_interpolation_date()
	l_sgs_plugin << _self.get_sgs_plugin()
	(l_interp_par, l_problem_string) << l_sgs_plugin.calculate_groundwater_situation_for_date(l_int_date)
	_if l_problem_string _isnt _unset
	_then
		_self.show_alert(l_problem_string)
		_return
	_endif
	_for i_coll _over _self.selected_class_vec.fast_elements()
	_loop
		_for i_rec _over i_coll.fast_elements()
		_loop
			_if _self.apply_content_filter? _is _true
			_then
				_if i_rec.ghc_cf_filter_rec? _is _true
				_then
					i_rec.ghc_set_groundwater_state(l_interp_par,
									l_int_date
					      )
				_endif
			_else
				i_rec.ghc_set_groundwater_state(l_interp_par,
								l_int_date)
			_endif
		_endloop
	_endloop
	l_show_interp? << _self.show_alert(_self.message(:interpolation_done_for_date,
							 l_int_date),
					   _self.message(:show_interpolation),
					   _self.message(:close))
	_if l_show_interp? _is _true
	_then
#		l_expl_vis_def << !current_package![:ghc_cf_explorer_visualisation_def]
#		l_app << _self.get_main_application()
#		l_exp_plugin << l_app.component(:explorer)
#
#		_if l_exp_plugin _isnt _unset
#		_then
#			l_exp_fw << l_exp_plugin.explorer_model
#		_endif
#		l_expl_vis_def.add_object_to_cf(l_interp_par, l_exp_fw, _true )
#
#		l_map_manager << l_app.component(:maps)
#		a_ace_control << l_app.get_ace_control_for(l_map_manager.current_map_view.ace_name)
#		l_sc_prop << a_ace_control.scales
#
#		l_display_scale_name_vec << rope.new()
#		_for i_scale _over l_sc_prop.fast_elements()
#		_loop
#			l_display_scale_name_vec.add(i_scale.name.write_string.as_symbol())
#		_endloop
#
#		a_ace_control.set_visibility_for_display_scales({l_interp_par.source_view.collections[:git_iso_parameter].field(:the_raster),
#								 l_interp_par.source_view.collections[:git_iso_point_value].field(:location),
#								 l_interp_par.source_view.collections[:git_iso_point_value].field(:label)
#								},
#								_true, _scatter l_display_scale_name_vec )
#
#		l_refresh_action << l_map_manager.action(:view_refresh)
#		l_refresh_action.execute_action()
#		l_editor_manager << l_app.component(:editor_manager)
#		l_editor_manager.activate_editor_for_object(l_interp_par)
	_endif
_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.get_sgs_plugin()
	##
	l_app << _self.get_main_application()
	_return l_app.component(:ghc_sgs)
_endmethod
$
_pragma(classify_level=restricted)
_method ghc_sgs_dialog.get_main_application()
	##
	_for i_app _over smallworld_product.applications.fast_elements()
	_loop
		_if i_app.component(:ghc_sgs) _isnt _unset
		_then
			_return i_app
		_endif
	_endloop
_endmethod
$
_pragma(classify_level=restricted)
_method ghc_sgs_dialog.cancel(_gather args)
	##
	##  Auto-generated by Dialog Designer : 19.03.2010
	_self.quit()

_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.date_time_item_02_aspect
	##
	##  Auto-generated by Dialog Designer : 19.03.2010
	##
	##  Generate single cell tabular list

	_local l_list << rope.new()
	_local l_styled_string << styled_string.new(:value, :when)

	_local l_dp << display_tree.new(1,property_list.new_with(:when,date.now()) )
	l_dp.styled_string << l_styled_string
	l_list.add(l_dp)

	>> l_list
_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.date_time_item_02_value
	##
	##  Auto-generated by Dialog Designer : 19.03.2010
	##
	##  Return the date value from the tree_item

	>> .items[:date_time_item_02].tree_manager.data.an_element().value[:when]
_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.date_time_item_02_changed(_gather args)
	##
	##  Auto-generated by Dialog Designer : 19.03.2010

#	_self.dd_default_method("ghc_sgs_dialog.date_time_item_02_changed()",_scatter args)
_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.dd_default_method(_gather args)
	##
	##  Auto-generated by Dialog Designer : 19.03.2010
	##
	##  General default method writing CLASS.METHOD and passed ARGS to
	##  the Magik> prompt.

	msg << write_string("Auto-generated : ",args[1],%newline)

	_if args.size > 1
	_then
		msg +<< write_string(%newline,args.size-1," parameter(s) passed:")
 	_endif

	_for i _over 2.upto(args.size)
	_loop
		msg +<< write_string(%newline,"         ",args[i])
	_endloop

	write(%newline,"-"*80,%newline,msg)
_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.simple_list_item_01_aspect
	##
	##  Auto-generated by Dialog Designer : 19.03.2010
	##
	##  SAMPLE simple_list_item aspect code ...

	l_list_vec << rope.new()

	l_view << _self.get_ww_view()

	l_coll_name_vec << _self.supported_collection_name_vec

	_for i_coll_name _over l_coll_name_vec.fast_elements()
	_loop
		l_coll << l_view.collections[i_coll_name]
		_if l_coll _isnt _unset
		_then
			l_list_vec.add(l_coll)
		_endif
	_endloop
	_return l_list_vec
_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.supported_collection_name_vec
	##
	_return {:aw_haltung,
		 :aw_anschluss_leitung,
		 :aw_schacht,
		 :aw_sonderbauwerk,
		 :aw_revisionsschacht
	}
_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.get_ww_view()
	##
	v << gis_program_manager.cached_dataset(_self.get_ww_view_name())
	_return v
_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.get_ww_view_name()
	##
	_return :kanal
_endmethod
$
_pragma(classify_level=restricted)
_method ghc_sgs_dialog.simple_list_item_01_changed(p_selected_class_vec)
	##
	##  Auto-generated by Dialog Designer : 19.03.2010
	_self.selected_class_vec << p_selected_class_vec

_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.toggle_item_01_changed(p_value)
	##
	##  Auto-generated by Dialog Designer : 19.03.2010
	_self.save_interpolation? << p_value
#	_self.dd_default_method("ghc_sgs_dialog.toggle_item_01_changed()",_scatter args)
_endmethod
$

_pragma(classify_level=restricted)
_method ghc_sgs_dialog.apply_content_filter_changed(p_value)
	##
	##  Auto-generated by Dialog Designer : 19.03.2010
	_self.apply_content_filter? << p_value

_endmethod
$

